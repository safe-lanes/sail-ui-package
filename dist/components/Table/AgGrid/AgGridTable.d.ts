import React from 'react';
import { ColDef, GridReadyEvent, GridApi, GridOptions } from 'ag-grid-community';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';
import 'ag-grid-community/styles/ag-theme-balham.css';
import 'ag-grid-community/styles/ag-theme-material.css';
import 'ag-grid-community/styles/ag-theme-quartz.css';
import './ad-grid.css';
export interface AgGridTableProps {
    rowData: any[];
    columnDefs: ColDef[];
    onGridReady?: (event: GridReadyEvent) => void;
    context?: any;
    height?: string | number;
    width?: string | number;
    className?: string;
    loading?: boolean;
    enableExport?: boolean;
    enableSideBar?: boolean;
    enableStatusBar?: boolean;
    enableRowGroup?: boolean;
    enablePivot?: boolean;
    enableAdvancedFilter?: boolean;
    rowSelection?: 'single' | 'multiple' | false;
    theme?: string;
    gridOptions?: Partial<GridOptions>;
    autoHeight?: boolean;
    maxHeight?: string | number;
    minHeight?: string | number;
    pagination?: boolean;
    paginationPageSize?: number;
    animateRows?: boolean;
    enableRangeSelection?: boolean;
    enableCharts?: boolean;
    suppressRowClickSelection?: boolean;
    licenseKey?: string;
}
export declare const AgGridTable: React.FC<AgGridTableProps>;
export declare const agGridUtils: {
    exportToCsv: (gridApi: GridApi, filename?: string) => void;
    exportToExcel: (gridApi: GridApi, filename?: string) => void;
    clearFilters: (gridApi: GridApi) => void;
    resetColumns: (gridApi: GridApi) => void;
    expandAllGroups: (gridApi: GridApi) => void;
    collapseAllGroups: (gridApi: GridApi) => void;
    hasRowGroups: (gridApi: GridApi) => boolean;
    getSelectedRows: (gridApi: GridApi) => any[];
    selectAll: (gridApi: GridApi) => void;
    deselectAll: (gridApi: GridApi) => void;
};
